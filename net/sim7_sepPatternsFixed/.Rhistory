rm (list = ls())
getwd()
tempVer = read.table("tempVer.txt")
tempVis = read.table("tempVis.txt")
nVer = length(tempVer)
nVis = length(tempVis)
# reformat the data
dataVer = as.matrix(tempVer[,2:nVer])
row.names(dataVer) = tempVer[,1]
dataVis = as.matrix(tempVis[,2:nVis])
row.names(dataVis) = tempVis[,1]
# visualization
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)))
plot(hclust(dist(dataVis)))
getwd()
ls
list.files()
temp = read.table("tempVer.txt")
temp
temp[,2:length(temp)]
dim(temp[,2:length(temp)])
image(temp[,2:length(temp)])
image(as.matrix(temp[,2:length(temp)]))
image(as.matrix(tempVer[,2:length(temp)]))
image(as.matrix(tempVis[,2:length(temp)]))
ls
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)))
plot(hclust(dist(dataVis)))
rm (list = ls())
getwd()
rm(list = ls())
getwd()
temp = read.table("hiddenFinalOut.txt")
# set some parameters
n = length(temp)
temp]
temp
summary(temp)
head(temp)
dim(temp)
temp
names(temp)
temp
temp[1,]
temp[2,]
temp[,1]
temp
tem
temp
temp[3]
temp[3,]
temp[4,]
temp[2,]
temp[1,]
temp[,1]
temp[,2]
temp[21:33,2]
temp[22:33,2]
temp[22:33,]
temp[,2:3]
temp[,2:33]
temp[,2:13]
temp[,4:33]
temp[22:33,4:33]
temp[22:33,2:33]
temp[22:33,4:n]
hiddenData = as.matrix(temp[22:33,4:n])
row.names(hiddenData) = temp[22:33,2]
hiddenData
plot.new()
par(mfrow = c(3,4))
for (i in 1:12) {
barplot(hiddenData[i,], beside = T)
title(row.names(hiddenData)[i])
}
plot.new()
par(mfrow = c(1,1))
distanceMatrix = (as.matrix(dist(hiddenData)))
dim(distanceMatrix)
distanceMatrix = (as.matrix(dist(hiddenData)))
image(distanceMatrix[12:1,], zlim = c(0,2), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
distanceMatrix
distanceMatrix = (as.matrix(dist(hiddenData)))
image(distanceMatrix[12:1,], zlim = c(0,6), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
image(distanceMatrix[12:1,], zlim = c(0,7), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
max(distanceMatrix)
min(distanceMatrix)
summary(distanceMatrix)
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
mtext(row.names(hiddenData))
lowerTriangularIndices = lower.tri(distanceMatrix)
range (distanceMatrix[lowerTriangularIndices])
image(distanceMatrix[24:1,], zlim = c(0,3.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
plot.new()
par(mfrow = c(1,1))
distanceMatrix = (as.matrix(dist(hiddenData)))
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
# mtext(row.names(hiddenData))
lowerTriangularIndices = lower.tri(distanceMatrix)
range (distanceMatrix[lowerTriangularIndices])
image(distanceMatrix[24:1,], zlim = c(0,3.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
range (distanceMatrix[lowerTriangularIndices])
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
plot.new()
par(mfrow = c(1,1))
distanceMatrix = (as.matrix(dist(hiddenData)))
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
# mtext(row.names(hiddenData))
lowerTriangularIndices = lower.tri(distanceMatrix)
range (distanceMatrix[lowerTriangularIndices])
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
plot.new()
lowerTriangularIndices = lower.tri(distanceMatrix)
range (distanceMatrix[lowerTriangularIndices])
image(distanceMatrix[12:1,], zlim = c(0,5.5), col = heat.colors(10, 1), yaxt = "n", xaxt = "n")
plot.new()
par(mfrow = c(1,1))
plot(hclust(dist(hiddenData)))
hiddenMDS = cmdscale(distanceMatrix)
plot(hiddenMDS)
text(hiddenMDS,labels = row.names(hiddenData))
list.files
list.files()
read.table("hiddenAllOut.txt")
rm(list = ls())
read.table("hiddenAllOut.txt")
temp = read.table("hiddenAllOut.txt")
dim(temp)
head(temp)
temp
clear
clc
dim(temp)
temp
temp
rm(list = ls())
getwd()
# load the data
temp = read.table("hiddenFinalOut.txt")
# set some parameters
n = length(temp)
numPatterns = 12
# convert the hidden activation to a matrix
hiddenData = as.matrix(temp[22:33,4:n])
row.names(hiddenData) = temp[22:33,2]
names(hiddenData)
hiddenData
rm(list = ls())
temp = read.table("hiddenAllOut.txt")
dim(temp)
temp[,1]
temp[,1] > 21
temp(temp[,1] > 21,)
temp[(]temp[,1] > 21,]
temp[temp[,1] > 21,]
dim(temp[temp[,1] > 21,])
dim(temp[temp[,1] > 21,])
286 / 25
dim(temp[temp[,1] > 21,])
temp[temp[,1] > 21,]
visualData = temp[temp[,1] > 21,]
head(visualData)
visualData[1:25,]
visualData[1:25,]
temp = read.table("hiddenAllOut.txt")
temp2 = read.table("hiddenOut.txt")
visualData = temp[temp[,1] > 21,]
temp2 = read.table("hiddenFinalOut.txt")
temp2
temp2[22:33,]
names.temp2[22:33,]
names(temp2[22:33,])
names(temp2[22:33,2])
temp2
temp2[,2]
temp2[22:33,2]
visualData
visualData
rm(list = ls())
temp = read.table("hiddenAllOut.txt")
temp2 = read.table("hiddenFinalOut.txt")
visualData = temp[temp[,1] > 21,]
rm(list = ls())
getwd()
list.files()
temp = read.table("VerbalOut.txt")
temp2 = read.table("hiddenFinalOut.txt")
namingData = temp[temp[,1] > 21,]
sl
rm (list = ls())
getwd()
tempVer = read.table("tempVer.txt")
tempVis = read.table("tempVis.txt")
image(as.matrix(tempVer[,2:length(temp)]))
image(as.matrix(tempVis[,2:length(temp)]))
nVer = length(tempVer)
rm (list = ls())
getwd()
tempVer = read.table("tempVer.txt")
tempVis = read.table("tempVis.txt")
image(as.matrix(tempVer[,2:length(tempVer)]))
image(as.matrix(tempVis[,2:length(tempVis)]))
nVer = length(tempVer)
nVis = length(tempVis)
# reformat the data
dataVer = as.matrix(tempVer[,2:nVer])
row.names(dataVer) = tempVer[,1]
dataVis = as.matrix(tempVis[,2:nVis])
row.names(dataVis) = tempVis[,1]
# visualization
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)))
plot(hclust(dist(dataVis)))
plot(hclust(dist(dataVer)), main = 'title')
plot(hclust(dist(dataVer)), main = 'Hierarchical Clustering for verbal patterns')
plot(hclust(dist(dataVis)), main = 'Hierarchical Clustering for visual patterns')
plot(hclust(dist(dataVer)), main = 'Hierarchical Clustering for verbal patterns')
plot(hclust(dist(dataVer)), main = 'Hierarchical Clustering for verbal patterns', xlab = 'instances')
plot(hclust(dist(dataVer)), main = 'Hierarchical Clustering for verbal patterns', xlab = 'instances', ylab = 'distance')
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)),
main = 'Hierarchical Clustering for verbal patterns',
xlab = 'instances', ylab = 'Distance')
plot(hclust(dist(dataVis)),
main = 'Hierarchical Clustering for visual patterns',
xlab = 'instances', ylab = 'Distance')
plot(hclust(dist(dataVer)),
main = 'Hierarchical Clustering for verbal patterns',
xlab = 'instances', ylab = 'Distance')
rm (list = ls())
getwd()
tempVer = read.table("tempVer.txt")
tempVis = read.table("tempVis.txt")
image(as.matrix(tempVer[,2:length(tempVer)]))
image(as.matrix(tempVis[,2:length(tempVis)]))
nVer = length(tempVer)
nVis = length(tempVis)
# reformat the data
dataVer = as.matrix(tempVer[,2:nVer])
row.names(dataVer) = tempVer[,1]
dataVis = as.matrix(tempVis[,2:nVis])
row.names(dataVis) = tempVis[,1]
# visualization
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)),
main = 'Hierarchical Clustering for verbal patterns',
xlab = 'instances', ylab = 'Distance')
par(mfrow=c(1,2))
plot(hclust(dist(dataVer)),
main = 'Hierarchical Clustering for verbal patterns',
xlab = 'instances', ylab = 'Distance')
plot(hclust(dist(dataVis)),
main = 'Hierarchical Clustering for visual patterns',
xlab = 'instances', ylab = 'Distance')
plot.new()
par(mfrow=c(1,1))
plot(hclust(dist(dataVer)),
main = 'Hierarchical Clustering for verbal patterns',
xlab = 'instances', ylab = 'Distance')
plot(hclust(dist(dataVis)),
main = 'Hierarchical Clustering for visual patterns',
xlab = 'instances', ylab = 'Distance')
