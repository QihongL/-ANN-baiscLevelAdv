%% process group score
% compute averages and error bars classification accuracies over time
% written for data generated by "runGroup.m"
clear; clc; clf; close

%% load file and compute summarized data
% condition = 'randomSubset';
condition = 'spatBlurring';
% subDirName = 'sim23.2_noise_e2_13-Mar-2016';
subDirName = 'sim23.3_noise_e2_21-Mar-2016';

% combine path name
mainDirName = 'groupScores_class';
pathName = strcat(mainDirName,'/',subDirName);
% get file info
listing = dir([pathName '/gsClass_' condition '*.mat']);


%% read data files
% preallocate
numFiles = size(listing,1);
propUsed = cell(numFiles,1);
for i = 1:numFiles
    % load a data file
    fileName = listing(i).name;
    load([pathName '/' fileName])
    % build legend
    propUsed{i} = strcat(num2str(extractPropUsed(fileName, condition)), '%');
    
    % compute means
    data.mean.acc(:,i) = mean(group.accuracy,2);
    data.mean.dev(:,i) = mean(group.deviation,2);
    data.mean.rep(:,i) = mean(group.response,2);
    data.mean.hr(:,i) = mean(group.hitRate,2);
    data.mean.fr(:,i) = mean(group.falseRate,2);
    % compute std (to build CI)
    data.sd.acc(:,i) = std(group.accuracy,0,2);
    data.sd.dev(:,i) = std(group.deviation,0,2);
    data.sd.rep(:,i) = std(group.response,0,2);
    data.sd.hr(:,i) = std(group.hitRate,0,2);
    data.sd.fr(:,i) = std(group.falseRate,0,2);
end



%% Visualize the classification accuracy over time
% constant
d.FONTSIZE = 18;
d.LW = 3;
% Plot the CV accuracies against time
subplot(2,2,1)
plot(data.mean.acc,'linewidth',d.LW)
% hold on
% for i = 1 : numFiles
%     errorbar(data.mean.acc(:,i),data.sd.acc(:,i),'linewidth',d.LW)
% end
% hold off
legend(propUsed, 'location', 'southeast', 'fontsize', d.FONTSIZE-2)
xlabel('time', 'FontSize', d.FONTSIZE)
ylabel('performance (%)', 'FontSize', d.FONTSIZE)
title_text = sprintf('Logistic reg accuracy - %s', condition);
title(title_text, 'FontSize', d.FONTSIZE)
set(gca,'FontSize',d.FONTSIZE)


% Plot the sum of absolute deviations (on the test set) against time
subplot(2,2,2)
plot(1 - data.mean.dev,'linewidth',d.LW)
% hold on
% for i = 1 : numFiles
%     errorbar(1 - data.mean.dev(:,i),data.sd.dev(:,i),'linewidth',d.LW)
% end
% hold off
legend(propUsed, 'location', 'southeast', 'fontsize', d.FONTSIZE-2)
xlabel('time', 'FontSize', d.FONTSIZE)
ylabel('$1 - \sum | \mathrm{deviation \hspace{2mm} from \hspace{2mm} targets}|  \hspace{.5cm} (target \in \{0,1\})$', 'FontSize', d.FONTSIZE,'Interpreter','latex')
title_text = sprintf(' ''Fit '' - %s ', condition);
title(title_text, 'FontSize', d.FONTSIZE)
set(gca,'FontSize',d.FONTSIZE)


subplot(2,2,3)
hold on 
% plot(data.mean.hr,'linewidth',d.LW/2)
% plot(data.mean.fr,'linewidth',d.LW/2)
plot(data.mean.hr-data.mean.fr,'linewidth',d.LW)
hold off
legend(propUsed, 'location', 'southeast', 'fontsize', d.FONTSIZE-2)
xlabel('time', 'FontSize', d.FONTSIZE)
ylabel('%', 'FontSize', d.FONTSIZE)
title_text = sprintf('(hit - false)rate  - %s', condition);
title(title_text, 'FontSize', d.FONTSIZE)
set(gca,'FontSize',d.FONTSIZE)